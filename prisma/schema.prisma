//////////////////////////////////////////////////////////////////////////////////////////////
// DO NOT MODIFY THIS FILE                                                                  //
// This file is automatically generated by ZenStack CLI and should not be manually updated. //
//////////////////////////////////////////////////////////////////////////////////////////////

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Role {
  ADMIN
  USER
}

enum DeviceStatus {
  ONLINE
  OFFLINE
  UNKNOWN
}

model User {
  id        String   @id() @default(ulid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()
  email     String   @unique()
  password  String
  name      String?
  role      Role     @default(USER)
  devices   Device[]
}

model DeviceType {
  id        String   @id() @default(ulid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()
  name      String   @unique()
  devices   Device[]
}

model Device {
  id           String       @id() @default(ulid())
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt()
  name         String
  description  String?
  status       DeviceStatus @default(UNKNOWN)
  metadata     Json?
  deviceType   DeviceType   @relation(fields: [deviceTypeId], references: [id])
  deviceTypeId String
  userId       String?
  user         User?        @relation(fields: [userId], references: [id])
  locationId   String?
  location     Location?    @relation(fields: [locationId], references: [id])
  mqttConfig   MQTTConfig[]
  telemetry    Telemetry[]
  alerts       Alert[]
}

model MQTTConfig {
  id           String   @id() @default(ulid())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt()
  deviceId     String
  device       Device   @relation(fields: [deviceId], references: [id])
  topicPrefix  String   @unique()
  listenTopics String[]
}

model Location {
  id        String   @id() @default(ulid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()
  name      String
  address   String?
  devices   Device[]
}

model Telemetry {
  id         String   @id() @default(ulid())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt()
  deviceId   String
  device     Device   @relation(fields: [deviceId], references: [id])
  receivedAt DateTime @default(now())
  data       Json

  @@index([deviceId, receivedAt])
}

model Alert {
  id        String   @id() @default(ulid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()
  deviceId  String
  device    Device   @relation(fields: [deviceId], references: [id])
  severity  String
  message   String
}
